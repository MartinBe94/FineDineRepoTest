// <auto-generated />
using FineDine.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FineDine.Database.Migrations
{
    [DbContext(typeof(FineDineContext))]
    partial class FineDineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FineDine.Database.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ColdDish")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WarmDish")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Dish");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColdDish = false,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fthestayathomechef.com%2Froast-chicken%2F&psig=AOvVaw3svEy3FrAyhs9j9blN6_r-&ust=1679223194025000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCMiN9YKo5f0CFQAAAAAdAAAAABBp",
                            Ingredients = "1 (3 pound) whole chicken, giblets removed\r\n\r\nsalt and black pepper to taste\r\n\r\n1 tablespoon onion powder, or to taste\r\n\r\n½ cup butter or margarine\r\n\r\n1 stalk celery, leaves removed",
                            Name = "Roasted Chicken",
                            WarmDish = true
                        },
                        new
                        {
                            Id = 2,
                            ColdDish = true,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.manusmenu.com%2Fsalmon-nigiri&psig=AOvVaw26KB-QIsXLl1S5JUMCh03w&ust=1679223165863000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCPjEsfWn5f0CFQAAAAAdAAAAABAD",
                            Ingredients = "1 1/2 cups (320 g) Calrose rice (sushi rice)\r\n1 3/4 cups (430 ml) water\r\n1 tsp salt\r\n3 tbsp (45 ml) rice vinegar\r\n1 tbsp sugar\r\n1 sushi-grade skinless salmon steak, about 1 lb (450 g) (see note)\r\n1 tsp (5 ml) wasabi\r\nSoy sauce for sushi and sashimi, to taste\r\nPickled ginger, to taste",
                            Name = "Salmon Sushi Nigri",
                            WarmDish = false
                        },
                        new
                        {
                            Id = 3,
                            ColdDish = false,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.wholesomeyum.com%2Fribeye-steak%2F&psig=AOvVaw3aThhC2AKgk7yNNRvUbMBY&ust=1679223089679000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCOjx69Sn5f0CFQAAAAAdAAAAABA_",
                            Ingredients = "2 rib-eye steaks, each about 200g and 2cm thick\r\n1tbsp sunflower oil\r\n1 tbsp/25g butter\r\n1 garlic clove, left whole but bashed once\r\nthyme, optional",
                            Name = "Rib Eye Steak",
                            WarmDish = true
                        },
                        new
                        {
                            Id = 4,
                            ColdDish = true,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.godare.se%2Frecept%2Fa%2F28a1aq%2Fwienerbrodets-dag--fira-med-hembakade-wienerbrod&psig=AOvVaw0WOqQSEc9GyAOl0OvyRUUX&ust=1679223026777000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCODQ0rKn5f0CFQAAAAAdAAAAABAD",
                            Ingredients = "2 cups unsalted butter, softened\r\n\r\n⅔ cup all-purpose flour\r\n\r\n8 cups all-purpose flour, divided\r\n\r\n4 ½ teaspoons active dry yeast\r\n\r\n2 ½ cups milk\r\n\r\n½ cup white sugar\r\n\r\n2 teaspoons salt\r\n\r\n2 large eggs\r\n\r\n1 teaspoon lemon extract\r\n\r\n1 teaspoon almond extract\r\n\r\n2 cups fruit preserves, any flavor\r\n\r\n1 large egg white, beaten",
                            Name = "Danish pastry",
                            WarmDish = false
                        });
                });

            modelBuilder.Entity("FineDine.Database.Entities.DishDrink", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("DrinkId")
                        .HasColumnType("int");

                    b.HasKey("DishId", "DrinkId");

                    b.HasIndex("DrinkId");

                    b.ToTable("DishDrink", (string)null);

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            DrinkId = 1
                        },
                        new
                        {
                            DishId = 1,
                            DrinkId = 2
                        },
                        new
                        {
                            DishId = 1,
                            DrinkId = 4
                        },
                        new
                        {
                            DishId = 2,
                            DrinkId = 3
                        },
                        new
                        {
                            DishId = 3,
                            DrinkId = 1
                        },
                        new
                        {
                            DishId = 3,
                            DrinkId = 2
                        },
                        new
                        {
                            DishId = 3,
                            DrinkId = 4
                        },
                        new
                        {
                            DishId = 4,
                            DrinkId = 5
                        },
                        new
                        {
                            DishId = 4,
                            DrinkId = 6
                        });
                });

            modelBuilder.Entity("FineDine.Database.Entities.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ColdDrink")
                        .HasColumnType("bit");

                    b.Property<bool>("HotDrink")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drink");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColdDrink = true,
                            HotDrink = false,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fcnaluxury.channelnewsasia.com%2Fexperiences%2Fburgundy-wines-prices-200641&psig=AOvVaw0UUbIiqMiN5U5cHrBqXAK8&ust=1679223263396000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCOiCl6ao5f0CFQAAAAAdAAAAABAn",
                            Name = "Red Burgundy Wine"
                        },
                        new
                        {
                            Id = 2,
                            ColdDrink = true,
                            HotDrink = false,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.commonwealthwineschool.com%2Fshop%2Fp%2Fwhite-burgundy-celebration-june-9&psig=AOvVaw3kR-gpMBkvLo7tP3Xcubnq&ust=1679223341571000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCPC5-cmo5f0CFQAAAAAdAAAAABAD",
                            Name = "White Burgundy Wine"
                        },
                        new
                        {
                            Id = 3,
                            ColdDrink = true,
                            HotDrink = false,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fmatadornetwork.com%2Fread%2Fsake-etiquette-japan%2F&psig=AOvVaw2Lj2xLonQu0yal1CrVNQjU&ust=1679223361624000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCMinoNOo5f0CFQAAAAAdAAAAABAD",
                            Name = "Sake"
                        },
                        new
                        {
                            Id = 4,
                            ColdDrink = true,
                            HotDrink = false,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.liquor.com%2Fbest-german-beers-5089460&psig=AOvVaw2ozoT_8gxxaI0lmWrP5WLE&ust=1679223423998000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCIipgfKo5f0CFQAAAAAdAAAAABAg",
                            Name = "Beer"
                        },
                        new
                        {
                            Id = 5,
                            ColdDrink = false,
                            HotDrink = true,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.medicalnewstoday.com%2Farticles%2F324771&psig=AOvVaw0QcuMfuZA3JbH2Huhgcxcr&ust=1679223478959000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCMi9wYup5f0CFQAAAAAdAAAAABAD",
                            Name = "Tea"
                        },
                        new
                        {
                            Id = 6,
                            ColdDrink = false,
                            HotDrink = true,
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.roastycoffee.com%2Fcold-coffee-vs-hot-coffee%2F&psig=AOvVaw20cwPYbtY6zbMr6FVc1JFC&ust=1679223505077000&source=images&cd=vfe&ved=0CA0QjRxqFwoTCJCz75ap5f0CFQAAAAAdAAAAABAJ",
                            Name = "Coffe"
                        });
                });

            modelBuilder.Entity("FineDine.Database.Entities.DishDrink", b =>
                {
                    b.HasOne("FineDine.Database.Entities.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FineDine.Database.Entities.Drink", "Drink")
                        .WithMany()
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Drink");
                });
#pragma warning restore 612, 618
        }
    }
}
